description = '5T SANS Magnet'

group = 'plugplay'

includes = ['alias_B']

tango_base = 'tango://ccm5h:10000/box/'

devices = dict(
    B_ccm5h = device('nicos_mlz.devices.ccm5h.AsymmetricMagnet',
        description = 'The resulting magnetic field',
        tangodevice = tango_base + 'magnet/field',
        abslimits = (-5, 5),
        fmtstr = '%.3f',
        maxage = 120,
        pollinterval = 15,
    ),
    I1_ccm5h = device('nicos.devices.tango.AnalogInput',
        description = 'actual current output of power supply 1',
        tangodevice = tango_base + 'ips1/current',
    ),
    I2_ccm5h = device('nicos.devices.tango.AnalogInput',
        description = 'actual current output of power supply 2',
        tangodevice = tango_base + 'ips2/current',
    ),

    ccm5h_T_stage1 = device('nicos.devices.tango.Sensor',
        description = 'Coldhead Stage 1',
        tangodevice = tango_base + 'ips1/t_coldhead_stage1',
        fmtstr = '%.2f',
        maxage = 120,
        pollinterval = 15,
    ),
    ccm5h_T_stage2 = device('nicos.devices.tango.Sensor',
        description = 'Coldhead Stage 2',
        tangodevice = tango_base + 'ips1/t_coldhead_stage2',
        fmtstr = '%.2f',
        maxage = 120,
        pollinterval = 15,
    ),
    ccm5h_T_shield_top = device('nicos.devices.tango.Sensor',
        description = 'Shield top',
        tangodevice = tango_base + 'ips2/t_shield_top',
        fmtstr = '%.2f',
        maxage = 120,
        pollinterval = 15,
    ),
    ccm5h_T_shield_bottom = device('nicos.devices.tango.Sensor',
        description = 'Shield bottom',
        tangodevice = tango_base + 'ips2/t_shield_bottom',
        fmtstr = '%.2f',
        maxage = 120,
        pollinterval = 15,
    ),
    ccm5h_T_topleft = device('nicos.devices.tango.Sensor',
        description = 'Coil top left',
        tangodevice = tango_base + 'ips1/t_topleft',
        fmtstr = '%.2f',
        maxage = 120,
        pollinterval = 15,
    ),
    ccm5h_T_topright = device('nicos.devices.tango.Sensor',
        description = 'Coil top right',
        tangodevice = tango_base + 'ips1/t_topright',
        fmtstr = '%.2f',
        maxage = 120,
        pollinterval = 15,
    ),
    ccm5h_T_bottomleft = device('nicos.devices.tango.Sensor',
        description = 'Coil bottom left (thermometer or wiring broken!)',
        tangodevice = tango_base + 'ips2/t_bottomleft',
        fmtstr = '%.2f',
        maxage = 120,
        pollinterval = 15,
    ),
    ccm5h_T_bottomright = device('nicos.devices.tango.Sensor',
        description = 'Coil bottom right',
        tangodevice = tango_base + 'ips2/t_bottomright',
        fmtstr = '%.2f',
        maxage = 120,
        pollinterval = 15,
    ),
    ccm5h_compressor = device('nicos.devices.tango.NamedDigitalOutput',
        description = 'Compressor for Coldhead (should be ON)',
        tangodevice = tango_base + 'plc/compressor',
        mapping = {'on': 1, 'off': 0},
    ),
)

alias_config = {
    'B': {'B_ccm5h': 100},
}

extended = dict(
    representative = 'B_ccm5h',
)
