description = 'Detector CARESS HWB Devices'

group = 'lowlevel'

includes = ['tensile', 'primaryslit_manual', 'sampletable']

devices = dict(
    mon = device('nicos.devices.generic.VirtualCounter',
        description = 'Simulated MON',
        fmtstr = '%d',
        type = 'monitor',
        lowlevel = True,
    ),
    tim1 = device('nicos.devices.mcstas.McStasTimer',
        description='McStas virtual neutron counts timer channel',
        mcstas = 'mcstas',
        lowlevel = True,
        fmtstr = '%.2f',
        unit = 's',
    ),
    t_mon = device('nicos.devices.generic.VirtualCounter',
        description = 'HWB MON Transmission Monitor',
        fmtstr = '%d',
        type = 'monitor',
        countrate = 100,
        lowlevel = True,
    ),
    mcstas = device('nicos_virt_mlz.stressi.devices.detector.McStasSimulation',
        description = 'McStas simulation',
        mcstasprog = 'stressi_fast_2.6',
        neutronspersec = 35842,
        sample = 'Sample',
        xprime = 'psw',
        yprime = 'psh',
        l_ambda = 'wav',
        xpos = 'xt',
        ypos = 'yt',
        zpos = 'zt',
        phi = 'phis',
        chi = 'chis',
        omega = 'omgs',
        theta2 = 'tths',
    ),
    image = device('nicos.devices.mcstas.McStasImage',
        description = 'Image data device',
        mcstas = 'mcstas',
        fmtstr = '%d',
        unit = 'cts',
        lowlevel = True,
    ),
    roi = device('nicos.devices.generic.RectROIChannel',
        description = 'ROI',
        roi = (122, 50, 12, 140),
    ),
    adet = device('nicos.devices.generic.Detector',
        description = 'Classical detector with single channels',
        timers = ['tim1'],
        monitors = ['mon'],
        counters = ['t_mon', 'roi',],
        images = ['image'],
        pollinterval = None,
        liveinterval = 0.5,
        postprocess = [
            ('roi', 'image'),
        ],
    ),
    ysd = device('nicos.devices.generic.ManualMove',
        description = 'distance sample detector',
        default = 100.,
        fmtstr = '%.2f',
        unit = 'mm',
        abslimits = (0, 1100.),
    ),
    hv1 = device('nicos.devices.generic.VirtualMotor',
        description = 'HV power supply 1',
        requires = {'level': 'admin'},
        abslimits = (0, 3200),
        speed = 2,
        fmtstr = '%.1f',
        unit = 'V',
        curvalue = 3100,
    ),
    hv2 = device('nicos.devices.generic.VirtualMotor',
        description = 'HV power supply 2',
        requires = {'level': 'admin'},
        abslimits = (-2500, 0),
        speed = 2,
        fmtstr = '%.1f',
        unit = 'V',
        curvalue = -2400,
    ),
)
